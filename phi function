// the number of integrs between 1 to n which are coprime to n
// phi(a * b) = phi(a) * phi(b) * (gcd(a , b) / phi(gcd(a , b))
int phi(int n) {
    int p = 1;
    for(int i = 2;i * i<= n;i++) {
        if(n % i == 0) {
            p *= (i - 1), n /= i;
            while(n % i == 0)
                n /= i, p *= i;
        }
    }
    if(n > 1)
        p *= (n - 1);
    return p;
}


int phi(int n) {
    int p = n;
    for(int i = 2;i * i<= n;i++) {
        if(n % i == 0) {
            while(n % i == 0)
                n /= i;
            p -= p / i;
        }
    }
    if(n > 1)
        p -= p / n;
    return p;
}

phi from 1 to n

int phi[N];
void gen() {
    for(int i = 1;i < N;i++)
        phi[i] = i;
    for(int i = 2;i * i < N;i++)
        if(phi[i] == i)
            for(int j = i + i;j < N;j += i)
                phi[j] -= phi[j] / i;
}
